{"version":3,"sources":["utils.ts"],"names":["compareVersions","versionToCheck","checkAgainst","semver","compare","coerce"],"mappings":";;;;;;;AAAA;;;;AAGO,MAAMA,eAAe,GAAG,CAC7BC,cAD6B,EAE7BC,YAF6B,KAG1B;AACH,MAAID,cAAc,IAAIC,YAAtB,EAAoC;AAClC;AACA;AAEA,WAAOC,gBAAOC,OAAP,EACL;AACAD,oBAAOE,MAAP,CAAcJ,cAAd,CAFK,EAGLE,gBAAOE,MAAP,CAAcH,YAAd,CAHK,CAAP;AAKD;;AACD,MAAID,cAAc,IAAIC,YAAY,IAAI,IAAtC,EAA4C;AAC1C,WAAO,CAAP;AACD;;AACD,MAAIA,YAAY,IAAID,cAAc,IAAI,IAAtC,EAA4C;AAC1C,WAAO,CAAC,CAAR;AACD;;AACD,SAAO,CAAP;AACD,CArBM","sourcesContent":["import semver from 'semver';\nimport type { SemverVersion } from './types';\n\nexport const compareVersions = (\n  versionToCheck: SemverVersion,\n  checkAgainst: SemverVersion\n) => {\n  if (versionToCheck && checkAgainst) {\n    // The version consists of 3 parts.\n    // 1 MAJOR, 2 MINOR, 3 LIVE_RELOAD_REV each of which contain 3 digits\n\n    return semver.compare(\n      // @ts-ignore\n      semver.coerce(versionToCheck),\n      semver.coerce(checkAgainst)\n    );\n  }\n  if (versionToCheck && checkAgainst == null) {\n    return 1;\n  }\n  if (checkAgainst && versionToCheck == null) {\n    return -1;\n  }\n  return 0;\n};\n"]}